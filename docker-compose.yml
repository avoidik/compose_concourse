version: '3'

networks:
  concourse:
    external:
      name: "${ENV_NETWORK}"

volumes:
  concourse-db-volume:
    driver: "${ENV_VOLUME_DRIVER}"
  concourse-web-volume:
    driver: "${ENV_VOLUME_DRIVER}"
  concourse-worker-volume:
    driver: "${ENV_VOLUME_DRIVER}"

services:
  concourse-db:
    container_name: db
    image: postgres:${ENV_PG_VER}
    environment:
      POSTGRES_DB: "${ENV_PG_DATABASE}"
      POSTGRES_USER: "${ENV_PG_USER}"
      POSTGRES_PASSWORD: "${ENV_PG_PASSWORD}"
      PGDATA: /database
    volumes:
      - concourse-db-volume:/database
    networks:
      - concourse

  concourse-web:
    container_name: web
    image: concourse/concourse
    restart: unless-stopped # required so that it retries until concourse-db comes up
    command:
      - web
    depends_on:
      - concourse-db
    ports:
      - "8080:8080"
    volumes:
      - "./keys/web:/concourse-keys"
      - "concourse-web-volume:/worker-state"
    environment:
      CONCOURSE_BASIC_AUTH_USERNAME: "${ENV_CONCOURSE_USER}"
      CONCOURSE_BASIC_AUTH_PASSWORD: "${ENV_CONCOURSE_PASSWORD}"
      CONCOURSE_EXTERNAL_URL: "${ENV_CONCOURSE_URL}"
      CONCOURSE_POSTGRES_HOST: concourse-db
      CONCOURSE_POSTGRES_USER: "${ENV_PG_USER}"
      CONCOURSE_POSTGRES_PASSWORD: "${ENV_PG_PASSWORD}"
      CONCOURSE_POSTGRES_DATABASE: "${ENV_PG_DATABASE}"
    networks:
      - concourse

  concourse-worker:
    container_name: worker
    image: concourse/concourse
    privileged: true
    depends_on:
      - concourse-web
    command:
      - worker
    volumes:
      - "./keys/worker:/concourse-keys"
      - "concourse-worker-volume:/worker-state"
    environment:
      CONCOURSE_TSA_HOST: concourse-web
    networks:
      - concourse
